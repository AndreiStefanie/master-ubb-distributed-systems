// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: communication-protocol.proto

package message

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message_Type int32

const (
	Message_NETWORK_MESSAGE                 Message_Type = 0
	Message_PROC_REGISTRATION               Message_Type = 1
	Message_PROC_INITIALIZE_SYSTEM          Message_Type = 2
	Message_PROC_DESTROY_SYSTEM             Message_Type = 3
	Message_APP_BROADCAST                   Message_Type = 4
	Message_APP_VALUE                       Message_Type = 5
	Message_APP_DECIDE                      Message_Type = 6
	Message_APP_PROPOSE                     Message_Type = 7
	Message_APP_READ                        Message_Type = 8
	Message_APP_WRITE                       Message_Type = 9
	Message_APP_READ_RETURN                 Message_Type = 10
	Message_APP_WRITE_RETURN                Message_Type = 11
	Message_UC_DECIDE                       Message_Type = 20
	Message_UC_PROPOSE                      Message_Type = 21
	Message_EP_ABORT                        Message_Type = 30
	Message_EP_ABORTED                      Message_Type = 31
	Message_EP_DECIDE                       Message_Type = 32
	Message_EP_INTERNAL_ACCEPT              Message_Type = 33
	Message_EP_INTERNAL_DECIDED             Message_Type = 34
	Message_EP_INTERNAL_READ                Message_Type = 35
	Message_EP_INTERNAL_STATE               Message_Type = 36
	Message_EP_INTERNAL_WRITE               Message_Type = 37
	Message_EP_PROPOSE                      Message_Type = 38
	Message_EC_INTERNAL_NACK                Message_Type = 40
	Message_EC_INTERNAL_NEW_EPOCH           Message_Type = 41
	Message_EC_START_EPOCH                  Message_Type = 42
	Message_BEB_BROADCAST                   Message_Type = 50
	Message_BEB_DELIVER                     Message_Type = 51
	Message_ELD_TIMEOUT                     Message_Type = 60
	Message_ELD_TRUST                       Message_Type = 61
	Message_NNAR_INTERNAL_ACK               Message_Type = 70
	Message_NNAR_INTERNAL_READ              Message_Type = 71
	Message_NNAR_INTERNAL_VALUE             Message_Type = 72
	Message_NNAR_INTERNAL_WRITE             Message_Type = 73
	Message_NNAR_READ                       Message_Type = 74
	Message_NNAR_READ_RETURN                Message_Type = 75
	Message_NNAR_WRITE                      Message_Type = 76
	Message_NNAR_WRITE_RETURN               Message_Type = 77
	Message_EPFD_INTERNAL_HEARTBEAT_REPLY   Message_Type = 80
	Message_EPFD_INTERNAL_HEARTBEAT_REQUEST Message_Type = 81
	Message_EPFD_RESTORE                    Message_Type = 82
	Message_EPFD_SUSPECT                    Message_Type = 83
	Message_EPFD_TIMEOUT                    Message_Type = 84
	Message_PL_DELIVER                      Message_Type = 90
	Message_PL_SEND                         Message_Type = 91
)

// Enum value maps for Message_Type.
var (
	Message_Type_name = map[int32]string{
		0:  "NETWORK_MESSAGE",
		1:  "PROC_REGISTRATION",
		2:  "PROC_INITIALIZE_SYSTEM",
		3:  "PROC_DESTROY_SYSTEM",
		4:  "APP_BROADCAST",
		5:  "APP_VALUE",
		6:  "APP_DECIDE",
		7:  "APP_PROPOSE",
		8:  "APP_READ",
		9:  "APP_WRITE",
		10: "APP_READ_RETURN",
		11: "APP_WRITE_RETURN",
		20: "UC_DECIDE",
		21: "UC_PROPOSE",
		30: "EP_ABORT",
		31: "EP_ABORTED",
		32: "EP_DECIDE",
		33: "EP_INTERNAL_ACCEPT",
		34: "EP_INTERNAL_DECIDED",
		35: "EP_INTERNAL_READ",
		36: "EP_INTERNAL_STATE",
		37: "EP_INTERNAL_WRITE",
		38: "EP_PROPOSE",
		40: "EC_INTERNAL_NACK",
		41: "EC_INTERNAL_NEW_EPOCH",
		42: "EC_START_EPOCH",
		50: "BEB_BROADCAST",
		51: "BEB_DELIVER",
		60: "ELD_TIMEOUT",
		61: "ELD_TRUST",
		70: "NNAR_INTERNAL_ACK",
		71: "NNAR_INTERNAL_READ",
		72: "NNAR_INTERNAL_VALUE",
		73: "NNAR_INTERNAL_WRITE",
		74: "NNAR_READ",
		75: "NNAR_READ_RETURN",
		76: "NNAR_WRITE",
		77: "NNAR_WRITE_RETURN",
		80: "EPFD_INTERNAL_HEARTBEAT_REPLY",
		81: "EPFD_INTERNAL_HEARTBEAT_REQUEST",
		82: "EPFD_RESTORE",
		83: "EPFD_SUSPECT",
		84: "EPFD_TIMEOUT",
		90: "PL_DELIVER",
		91: "PL_SEND",
	}
	Message_Type_value = map[string]int32{
		"NETWORK_MESSAGE":                 0,
		"PROC_REGISTRATION":               1,
		"PROC_INITIALIZE_SYSTEM":          2,
		"PROC_DESTROY_SYSTEM":             3,
		"APP_BROADCAST":                   4,
		"APP_VALUE":                       5,
		"APP_DECIDE":                      6,
		"APP_PROPOSE":                     7,
		"APP_READ":                        8,
		"APP_WRITE":                       9,
		"APP_READ_RETURN":                 10,
		"APP_WRITE_RETURN":                11,
		"UC_DECIDE":                       20,
		"UC_PROPOSE":                      21,
		"EP_ABORT":                        30,
		"EP_ABORTED":                      31,
		"EP_DECIDE":                       32,
		"EP_INTERNAL_ACCEPT":              33,
		"EP_INTERNAL_DECIDED":             34,
		"EP_INTERNAL_READ":                35,
		"EP_INTERNAL_STATE":               36,
		"EP_INTERNAL_WRITE":               37,
		"EP_PROPOSE":                      38,
		"EC_INTERNAL_NACK":                40,
		"EC_INTERNAL_NEW_EPOCH":           41,
		"EC_START_EPOCH":                  42,
		"BEB_BROADCAST":                   50,
		"BEB_DELIVER":                     51,
		"ELD_TIMEOUT":                     60,
		"ELD_TRUST":                       61,
		"NNAR_INTERNAL_ACK":               70,
		"NNAR_INTERNAL_READ":              71,
		"NNAR_INTERNAL_VALUE":             72,
		"NNAR_INTERNAL_WRITE":             73,
		"NNAR_READ":                       74,
		"NNAR_READ_RETURN":                75,
		"NNAR_WRITE":                      76,
		"NNAR_WRITE_RETURN":               77,
		"EPFD_INTERNAL_HEARTBEAT_REPLY":   80,
		"EPFD_INTERNAL_HEARTBEAT_REQUEST": 81,
		"EPFD_RESTORE":                    82,
		"EPFD_SUSPECT":                    83,
		"EPFD_TIMEOUT":                    84,
		"PL_DELIVER":                      90,
		"PL_SEND":                         91,
	}
)

func (x Message_Type) Enum() *Message_Type {
	p := new(Message_Type)
	*p = x
	return p
}

func (x Message_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Message_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_communication_protocol_proto_enumTypes[0].Descriptor()
}

func (Message_Type) Type() protoreflect.EnumType {
	return &file_communication_protocol_proto_enumTypes[0]
}

func (x Message_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Message_Type.Descriptor instead.
func (Message_Type) EnumDescriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{47, 0}
}

// Data structures
type ProcessId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host  string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"` // String containing either domain name  or IP (most likely)
	Port  int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Owner string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`  // Short alias or acronym of the owner of the process
	Index int32  `protobuf:"varint,4,opt,name=index,proto3" json:"index,omitempty"` // Process index within the owner's processes. Must be 1, 2, or 3
	Rank  int32  `protobuf:"varint,5,opt,name=rank,proto3" json:"rank,omitempty"`   // Populated by the hub when initiating consensus with AppPropose. Do not calculate your own rank,
}

func (x *ProcessId) Reset() {
	*x = ProcessId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessId) ProtoMessage() {}

func (x *ProcessId) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessId.ProtoReflect.Descriptor instead.
func (*ProcessId) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessId) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ProcessId) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ProcessId) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ProcessId) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ProcessId) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Defined bool  `protobuf:"varint,1,opt,name=defined,proto3" json:"defined,omitempty"`
	V       int32 `protobuf:"varint,2,opt,name=v,proto3" json:"v,omitempty"` // Value; ignore if defined == false
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{1}
}

func (x *Value) GetDefined() bool {
	if x != nil {
		return x.Defined
	}
	return false
}

func (x *Value) GetV() int32 {
	if x != nil {
		return x.V
	}
	return 0
}

// Messages and events
// Process
type ProcRegistration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`  // Some short alias
	Index int32  `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"` // Process index: must be 1, 2, or 3
}

func (x *ProcRegistration) Reset() {
	*x = ProcRegistration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcRegistration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcRegistration) ProtoMessage() {}

func (x *ProcRegistration) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcRegistration.ProtoReflect.Descriptor instead.
func (*ProcRegistration) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{2}
}

func (x *ProcRegistration) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ProcRegistration) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type ProcInitializeSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// be handled by the process.
	Processes []*ProcessId `protobuf:"bytes,1,rep,name=processes,proto3" json:"processes,omitempty"` // List of processes involved in the consensus algorithm (PI set)
}

func (x *ProcInitializeSystem) Reset() {
	*x = ProcInitializeSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcInitializeSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcInitializeSystem) ProtoMessage() {}

func (x *ProcInitializeSystem) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcInitializeSystem.ProtoReflect.Descriptor instead.
func (*ProcInitializeSystem) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{3}
}

func (x *ProcInitializeSystem) GetProcesses() []*ProcessId {
	if x != nil {
		return x.Processes
	}
	return nil
}

type ProcDestroySystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProcDestroySystem) Reset() {
	*x = ProcDestroySystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcDestroySystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcDestroySystem) ProtoMessage() {}

func (x *ProcDestroySystem) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcDestroySystem.ProtoReflect.Descriptor instead.
func (*ProcDestroySystem) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{4}
}

// APP
type AppBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Triggers a BEB broadcast containing AppValue populated with the value from AppBroadcast
	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AppBroadcast) Reset() {
	*x = AppBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppBroadcast) ProtoMessage() {}

func (x *AppBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppBroadcast.ProtoReflect.Descriptor instead.
func (*AppBroadcast) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{5}
}

func (x *AppBroadcast) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type AppValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Message(NetworkMessage(Message(AppValue)))
	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AppValue) Reset() {
	*x = AppValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppValue) ProtoMessage() {}

func (x *AppValue) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppValue.ProtoReflect.Descriptor instead.
func (*AppValue) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{6}
}

func (x *AppValue) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type AppPropose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic string `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"` // The topic on which to reach consensus. There will be a consensus instance for each topic
	Value *Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // Random value chosen by the HUB
}

func (x *AppPropose) Reset() {
	*x = AppPropose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppPropose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppPropose) ProtoMessage() {}

func (x *AppPropose) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppPropose.ProtoReflect.Descriptor instead.
func (*AppPropose) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{7}
}

func (x *AppPropose) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *AppPropose) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type AppDecide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"` // Decided value taken from UcDecide
}

func (x *AppDecide) Reset() {
	*x = AppDecide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppDecide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppDecide) ProtoMessage() {}

func (x *AppDecide) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppDecide.ProtoReflect.Descriptor instead.
func (*AppDecide) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{8}
}

func (x *AppDecide) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type AppRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Register string `protobuf:"bytes,1,opt,name=register,proto3" json:"register,omitempty"`
}

func (x *AppRead) Reset() {
	*x = AppRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppRead) ProtoMessage() {}

func (x *AppRead) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppRead.ProtoReflect.Descriptor instead.
func (*AppRead) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{9}
}

func (x *AppRead) GetRegister() string {
	if x != nil {
		return x.Register
	}
	return ""
}

type AppWrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Register string `protobuf:"bytes,1,opt,name=register,proto3" json:"register,omitempty"`
	Value    *Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // Value to write in the register
}

func (x *AppWrite) Reset() {
	*x = AppWrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppWrite) ProtoMessage() {}

func (x *AppWrite) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppWrite.ProtoReflect.Descriptor instead.
func (*AppWrite) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{10}
}

func (x *AppWrite) GetRegister() string {
	if x != nil {
		return x.Register
	}
	return ""
}

func (x *AppWrite) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type AppReadReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Register string `protobuf:"bytes,1,opt,name=register,proto3" json:"register,omitempty"`
	Value    *Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // Value read from the register
}

func (x *AppReadReturn) Reset() {
	*x = AppReadReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppReadReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppReadReturn) ProtoMessage() {}

func (x *AppReadReturn) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppReadReturn.ProtoReflect.Descriptor instead.
func (*AppReadReturn) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{11}
}

func (x *AppReadReturn) GetRegister() string {
	if x != nil {
		return x.Register
	}
	return ""
}

func (x *AppReadReturn) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type AppWriteReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Register string `protobuf:"bytes,1,opt,name=register,proto3" json:"register,omitempty"`
}

func (x *AppWriteReturn) Reset() {
	*x = AppWriteReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppWriteReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppWriteReturn) ProtoMessage() {}

func (x *AppWriteReturn) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppWriteReturn.ProtoReflect.Descriptor instead.
func (*AppWriteReturn) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{12}
}

func (x *AppWriteReturn) GetRegister() string {
	if x != nil {
		return x.Register
	}
	return ""
}

// UC
// In the Init event or constructor, initialize l (leader) with the max-rank process in PI
type UcPropose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UcPropose) Reset() {
	*x = UcPropose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcPropose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcPropose) ProtoMessage() {}

func (x *UcPropose) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcPropose.ProtoReflect.Descriptor instead.
func (*UcPropose) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{13}
}

func (x *UcPropose) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type UcDecide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UcDecide) Reset() {
	*x = UcDecide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UcDecide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UcDecide) ProtoMessage() {}

func (x *UcDecide) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UcDecide.ProtoReflect.Descriptor instead.
func (*UcDecide) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{14}
}

func (x *UcDecide) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

// EP
type EpAbort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EpAbort) Reset() {
	*x = EpAbort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpAbort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpAbort) ProtoMessage() {}

func (x *EpAbort) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpAbort.ProtoReflect.Descriptor instead.
func (*EpAbort) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{15}
}

type EpAborted struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ets            int32  `protobuf:"varint,1,opt,name=ets,proto3" json:"ets,omitempty"`                       // Needed to know in UC the timestamp of the EP, where the algorithm says "such that ts = ets do"
	ValueTimestamp int32  `protobuf:"varint,2,opt,name=valueTimestamp,proto3" json:"valueTimestamp,omitempty"` // The timestamp part of the "state" mentioned in the algorithm
	Value          *Value `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`                    // The value part of the "state" mentioned in the algorithm
}

func (x *EpAborted) Reset() {
	*x = EpAborted{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpAborted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpAborted) ProtoMessage() {}

func (x *EpAborted) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpAborted.ProtoReflect.Descriptor instead.
func (*EpAborted) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{16}
}

func (x *EpAborted) GetEts() int32 {
	if x != nil {
		return x.Ets
	}
	return 0
}

func (x *EpAborted) GetValueTimestamp() int32 {
	if x != nil {
		return x.ValueTimestamp
	}
	return 0
}

func (x *EpAborted) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type EpPropose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EpPropose) Reset() {
	*x = EpPropose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpPropose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpPropose) ProtoMessage() {}

func (x *EpPropose) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpPropose.ProtoReflect.Descriptor instead.
func (*EpPropose) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{17}
}

func (x *EpPropose) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type EpDecide struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ets   int32  `protobuf:"varint,1,opt,name=ets,proto3" json:"ets,omitempty"` // Needed to know in UC the timestamp of the EP, where the algorithm says "such that ts = ets do"
	Value *Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EpDecide) Reset() {
	*x = EpDecide{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpDecide) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpDecide) ProtoMessage() {}

func (x *EpDecide) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpDecide.ProtoReflect.Descriptor instead.
func (*EpDecide) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{18}
}

func (x *EpDecide) GetEts() int32 {
	if x != nil {
		return x.Ets
	}
	return 0
}

func (x *EpDecide) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type EpInternalRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EpInternalRead) Reset() {
	*x = EpInternalRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpInternalRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpInternalRead) ProtoMessage() {}

func (x *EpInternalRead) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpInternalRead.ProtoReflect.Descriptor instead.
func (*EpInternalRead) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{19}
}

type EpInternalState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValueTimestamp int32  `protobuf:"varint,1,opt,name=valueTimestamp,proto3" json:"valueTimestamp,omitempty"`
	Value          *Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EpInternalState) Reset() {
	*x = EpInternalState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpInternalState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpInternalState) ProtoMessage() {}

func (x *EpInternalState) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpInternalState.ProtoReflect.Descriptor instead.
func (*EpInternalState) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{20}
}

func (x *EpInternalState) GetValueTimestamp() int32 {
	if x != nil {
		return x.ValueTimestamp
	}
	return 0
}

func (x *EpInternalState) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type EpInternalWrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EpInternalWrite) Reset() {
	*x = EpInternalWrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpInternalWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpInternalWrite) ProtoMessage() {}

func (x *EpInternalWrite) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpInternalWrite.ProtoReflect.Descriptor instead.
func (*EpInternalWrite) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{21}
}

func (x *EpInternalWrite) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type EpInternalAccept struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EpInternalAccept) Reset() {
	*x = EpInternalAccept{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpInternalAccept) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpInternalAccept) ProtoMessage() {}

func (x *EpInternalAccept) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpInternalAccept.ProtoReflect.Descriptor instead.
func (*EpInternalAccept) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{22}
}

type EpInternalDecided struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EpInternalDecided) Reset() {
	*x = EpInternalDecided{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpInternalDecided) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpInternalDecided) ProtoMessage() {}

func (x *EpInternalDecided) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpInternalDecided.ProtoReflect.Descriptor instead.
func (*EpInternalDecided) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{23}
}

func (x *EpInternalDecided) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

// EC
// In the Init event or constructor, initialize "trusted" with the max-rank process in PI
type EcInternalNack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EcInternalNack) Reset() {
	*x = EcInternalNack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EcInternalNack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcInternalNack) ProtoMessage() {}

func (x *EcInternalNack) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcInternalNack.ProtoReflect.Descriptor instead.
func (*EcInternalNack) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{24}
}

type EcStartEpoch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewTimestamp int32      `protobuf:"varint,1,opt,name=newTimestamp,proto3" json:"newTimestamp,omitempty"`
	NewLeader    *ProcessId `protobuf:"bytes,2,opt,name=newLeader,proto3" json:"newLeader,omitempty"`
}

func (x *EcStartEpoch) Reset() {
	*x = EcStartEpoch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EcStartEpoch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcStartEpoch) ProtoMessage() {}

func (x *EcStartEpoch) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcStartEpoch.ProtoReflect.Descriptor instead.
func (*EcStartEpoch) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{25}
}

func (x *EcStartEpoch) GetNewTimestamp() int32 {
	if x != nil {
		return x.NewTimestamp
	}
	return 0
}

func (x *EcStartEpoch) GetNewLeader() *ProcessId {
	if x != nil {
		return x.NewLeader
	}
	return nil
}

type EcInternalNewEpoch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp int32 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *EcInternalNewEpoch) Reset() {
	*x = EcInternalNewEpoch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EcInternalNewEpoch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EcInternalNewEpoch) ProtoMessage() {}

func (x *EcInternalNewEpoch) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EcInternalNewEpoch.ProtoReflect.Descriptor instead.
func (*EcInternalNewEpoch) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{26}
}

func (x *EcInternalNewEpoch) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// BEB
type BebBroadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *BebBroadcast) Reset() {
	*x = BebBroadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BebBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BebBroadcast) ProtoMessage() {}

func (x *BebBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BebBroadcast.ProtoReflect.Descriptor instead.
func (*BebBroadcast) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{27}
}

func (x *BebBroadcast) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type BebDeliver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message *Message   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Sender  *ProcessId `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (x *BebDeliver) Reset() {
	*x = BebDeliver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BebDeliver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BebDeliver) ProtoMessage() {}

func (x *BebDeliver) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BebDeliver.ProtoReflect.Descriptor instead.
func (*BebDeliver) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{28}
}

func (x *BebDeliver) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *BebDeliver) GetSender() *ProcessId {
	if x != nil {
		return x.Sender
	}
	return nil
}

// ELD
type EldTimeout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EldTimeout) Reset() {
	*x = EldTimeout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EldTimeout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EldTimeout) ProtoMessage() {}

func (x *EldTimeout) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EldTimeout.ProtoReflect.Descriptor instead.
func (*EldTimeout) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{29}
}

type EldTrust struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Process *ProcessId `protobuf:"bytes,1,opt,name=process,proto3" json:"process,omitempty"`
}

func (x *EldTrust) Reset() {
	*x = EldTrust{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EldTrust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EldTrust) ProtoMessage() {}

func (x *EldTrust) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EldTrust.ProtoReflect.Descriptor instead.
func (*EldTrust) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{30}
}

func (x *EldTrust) GetProcess() *ProcessId {
	if x != nil {
		return x.Process
	}
	return nil
}

// NNAR
type NnarRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NnarRead) Reset() {
	*x = NnarRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NnarRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NnarRead) ProtoMessage() {}

func (x *NnarRead) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NnarRead.ProtoReflect.Descriptor instead.
func (*NnarRead) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{31}
}

type NnarInternalRead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadId int32 `protobuf:"varint,1,opt,name=readId,proto3" json:"readId,omitempty"`
}

func (x *NnarInternalRead) Reset() {
	*x = NnarInternalRead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NnarInternalRead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NnarInternalRead) ProtoMessage() {}

func (x *NnarInternalRead) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NnarInternalRead.ProtoReflect.Descriptor instead.
func (*NnarInternalRead) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{32}
}

func (x *NnarInternalRead) GetReadId() int32 {
	if x != nil {
		return x.ReadId
	}
	return 0
}

type NnarInternalValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadId     int32  `protobuf:"varint,1,opt,name=readId,proto3" json:"readId,omitempty"`
	Timestamp  int32  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	WriterRank int32  `protobuf:"varint,3,opt,name=writerRank,proto3" json:"writerRank,omitempty"`
	Value      *Value `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NnarInternalValue) Reset() {
	*x = NnarInternalValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NnarInternalValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NnarInternalValue) ProtoMessage() {}

func (x *NnarInternalValue) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NnarInternalValue.ProtoReflect.Descriptor instead.
func (*NnarInternalValue) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{33}
}

func (x *NnarInternalValue) GetReadId() int32 {
	if x != nil {
		return x.ReadId
	}
	return 0
}

func (x *NnarInternalValue) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *NnarInternalValue) GetWriterRank() int32 {
	if x != nil {
		return x.WriterRank
	}
	return 0
}

func (x *NnarInternalValue) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type NnarInternalWrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadId     int32  `protobuf:"varint,1,opt,name=readId,proto3" json:"readId,omitempty"`
	Timestamp  int32  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	WriterRank int32  `protobuf:"varint,3,opt,name=writerRank,proto3" json:"writerRank,omitempty"`
	Value      *Value `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NnarInternalWrite) Reset() {
	*x = NnarInternalWrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NnarInternalWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NnarInternalWrite) ProtoMessage() {}

func (x *NnarInternalWrite) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NnarInternalWrite.ProtoReflect.Descriptor instead.
func (*NnarInternalWrite) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{34}
}

func (x *NnarInternalWrite) GetReadId() int32 {
	if x != nil {
		return x.ReadId
	}
	return 0
}

func (x *NnarInternalWrite) GetTimestamp() int32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *NnarInternalWrite) GetWriterRank() int32 {
	if x != nil {
		return x.WriterRank
	}
	return 0
}

func (x *NnarInternalWrite) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type NnarWrite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NnarWrite) Reset() {
	*x = NnarWrite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NnarWrite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NnarWrite) ProtoMessage() {}

func (x *NnarWrite) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NnarWrite.ProtoReflect.Descriptor instead.
func (*NnarWrite) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{35}
}

func (x *NnarWrite) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type NnarInternalAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadId int32 `protobuf:"varint,1,opt,name=readId,proto3" json:"readId,omitempty"`
}

func (x *NnarInternalAck) Reset() {
	*x = NnarInternalAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NnarInternalAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NnarInternalAck) ProtoMessage() {}

func (x *NnarInternalAck) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NnarInternalAck.ProtoReflect.Descriptor instead.
func (*NnarInternalAck) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{36}
}

func (x *NnarInternalAck) GetReadId() int32 {
	if x != nil {
		return x.ReadId
	}
	return 0
}

type NnarReadReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *Value `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *NnarReadReturn) Reset() {
	*x = NnarReadReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NnarReadReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NnarReadReturn) ProtoMessage() {}

func (x *NnarReadReturn) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NnarReadReturn.ProtoReflect.Descriptor instead.
func (*NnarReadReturn) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{37}
}

func (x *NnarReadReturn) GetValue() *Value {
	if x != nil {
		return x.Value
	}
	return nil
}

type NnarWriteReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NnarWriteReturn) Reset() {
	*x = NnarWriteReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NnarWriteReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NnarWriteReturn) ProtoMessage() {}

func (x *NnarWriteReturn) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NnarWriteReturn.ProtoReflect.Descriptor instead.
func (*NnarWriteReturn) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{38}
}

// EPFD
// Use as timer delay "delta" 100 milliseconds
type EpfdTimeout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EpfdTimeout) Reset() {
	*x = EpfdTimeout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpfdTimeout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpfdTimeout) ProtoMessage() {}

func (x *EpfdTimeout) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpfdTimeout.ProtoReflect.Descriptor instead.
func (*EpfdTimeout) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{39}
}

type EpfdInternalHeartbeatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EpfdInternalHeartbeatRequest) Reset() {
	*x = EpfdInternalHeartbeatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpfdInternalHeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpfdInternalHeartbeatRequest) ProtoMessage() {}

func (x *EpfdInternalHeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpfdInternalHeartbeatRequest.ProtoReflect.Descriptor instead.
func (*EpfdInternalHeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{40}
}

type EpfdInternalHeartbeatReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EpfdInternalHeartbeatReply) Reset() {
	*x = EpfdInternalHeartbeatReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpfdInternalHeartbeatReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpfdInternalHeartbeatReply) ProtoMessage() {}

func (x *EpfdInternalHeartbeatReply) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpfdInternalHeartbeatReply.ProtoReflect.Descriptor instead.
func (*EpfdInternalHeartbeatReply) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{41}
}

type EpfdSuspect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Process *ProcessId `protobuf:"bytes,1,opt,name=process,proto3" json:"process,omitempty"`
}

func (x *EpfdSuspect) Reset() {
	*x = EpfdSuspect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpfdSuspect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpfdSuspect) ProtoMessage() {}

func (x *EpfdSuspect) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpfdSuspect.ProtoReflect.Descriptor instead.
func (*EpfdSuspect) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{42}
}

func (x *EpfdSuspect) GetProcess() *ProcessId {
	if x != nil {
		return x.Process
	}
	return nil
}

type EpfdRestore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Process *ProcessId `protobuf:"bytes,1,opt,name=process,proto3" json:"process,omitempty"`
}

func (x *EpfdRestore) Reset() {
	*x = EpfdRestore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpfdRestore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpfdRestore) ProtoMessage() {}

func (x *EpfdRestore) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpfdRestore.ProtoReflect.Descriptor instead.
func (*EpfdRestore) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{43}
}

func (x *EpfdRestore) GetProcess() *ProcessId {
	if x != nil {
		return x.Process
	}
	return nil
}

// PL
type PlSend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Destination *ProcessId `protobuf:"bytes,1,opt,name=destination,proto3" json:"destination,omitempty"`
	Message     *Message   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PlSend) Reset() {
	*x = PlSend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlSend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlSend) ProtoMessage() {}

func (x *PlSend) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlSend.ProtoReflect.Descriptor instead.
func (*PlSend) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{44}
}

func (x *PlSend) GetDestination() *ProcessId {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *PlSend) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type PlDeliver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender  *ProcessId `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Message *Message   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PlDeliver) Reset() {
	*x = PlDeliver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlDeliver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlDeliver) ProtoMessage() {}

func (x *PlDeliver) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlDeliver.ProtoReflect.Descriptor instead.
func (*PlDeliver) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{45}
}

func (x *PlDeliver) GetSender() *ProcessId {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *PlDeliver) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

// Network-traveling message
// When handling MessageA(PlSend(MessageB)) create MessageC(NetworkMessage(MessageB)), setting:
//     MessageC.SystemId = MessageA.SystemId
//     MessageC.ToAbstractionId = MessageA.ToAbstractionId
//     NetworkMessage.senderHost = N/A (ignore)
//     NetworkMessage.senderListeningPort = The your listening port
// Then marshal MessageC to byte buffer and send:
//    bytes 0 - 3: buffer length
//    bytes 4 -  : buffer data
// When unmarshalling from a buffer received from the network create MessageD(PlDeliver(MessageB)), setting:
//     MessageD.ToAbstractionId = MessageC.ToAbstractionId
type NetworkMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SenderHost          string   `protobuf:"bytes,1,opt,name=senderHost,proto3" json:"senderHost,omitempty"`
	SenderListeningPort int32    `protobuf:"varint,2,opt,name=senderListeningPort,proto3" json:"senderListeningPort,omitempty"`
	Message             *Message `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *NetworkMessage) Reset() {
	*x = NetworkMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkMessage) ProtoMessage() {}

func (x *NetworkMessage) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkMessage.ProtoReflect.Descriptor instead.
func (*NetworkMessage) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{46}
}

func (x *NetworkMessage) GetSenderHost() string {
	if x != nil {
		return x.SenderHost
	}
	return ""
}

func (x *NetworkMessage) GetSenderListeningPort() int32 {
	if x != nil {
		return x.SenderListeningPort
	}
	return 0
}

func (x *NetworkMessage) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

// Wrapper message
type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                         Message_Type                  `protobuf:"varint,1,opt,name=type,proto3,enum=message.Message_Type" json:"type,omitempty"`
	MessageUuid                  string                        `protobuf:"bytes,2,opt,name=messageUuid,proto3" json:"messageUuid,omitempty"`
	FromAbstractionId            string                        `protobuf:"bytes,3,opt,name=FromAbstractionId,proto3" json:"FromAbstractionId,omitempty"` // Abstraction ID constructed as shown to the right of the system diagram
	ToAbstractionId              string                        `protobuf:"bytes,4,opt,name=ToAbstractionId,proto3" json:"ToAbstractionId,omitempty"`     // Abstraction ID constructed as shown to the right of the system diagram
	SystemId                     string                        `protobuf:"bytes,5,opt,name=systemId,proto3" json:"systemId,omitempty"`
	NetworkMessage               *NetworkMessage               `protobuf:"bytes,6,opt,name=networkMessage,proto3" json:"networkMessage,omitempty"`
	ProcRegistration             *ProcRegistration             `protobuf:"bytes,7,opt,name=procRegistration,proto3" json:"procRegistration,omitempty"`
	ProcInitializeSystem         *ProcInitializeSystem         `protobuf:"bytes,8,opt,name=procInitializeSystem,proto3" json:"procInitializeSystem,omitempty"`
	ProcDestroySystem            *ProcDestroySystem            `protobuf:"bytes,9,opt,name=procDestroySystem,proto3" json:"procDestroySystem,omitempty"`
	AppBroadcast                 *AppBroadcast                 `protobuf:"bytes,10,opt,name=appBroadcast,proto3" json:"appBroadcast,omitempty"`
	AppValue                     *AppValue                     `protobuf:"bytes,11,opt,name=appValue,proto3" json:"appValue,omitempty"`
	AppPropose                   *AppPropose                   `protobuf:"bytes,12,opt,name=appPropose,proto3" json:"appPropose,omitempty"`
	AppDecide                    *AppDecide                    `protobuf:"bytes,13,opt,name=appDecide,proto3" json:"appDecide,omitempty"`
	AppRead                      *AppRead                      `protobuf:"bytes,14,opt,name=appRead,proto3" json:"appRead,omitempty"`
	AppWrite                     *AppWrite                     `protobuf:"bytes,15,opt,name=appWrite,proto3" json:"appWrite,omitempty"`
	AppReadReturn                *AppReadReturn                `protobuf:"bytes,16,opt,name=appReadReturn,proto3" json:"appReadReturn,omitempty"`
	AppWriteReturn               *AppWriteReturn               `protobuf:"bytes,17,opt,name=appWriteReturn,proto3" json:"appWriteReturn,omitempty"`
	UcDecide                     *UcDecide                     `protobuf:"bytes,20,opt,name=ucDecide,proto3" json:"ucDecide,omitempty"`
	UcPropose                    *UcPropose                    `protobuf:"bytes,21,opt,name=ucPropose,proto3" json:"ucPropose,omitempty"`
	EpAbort                      *EpAbort                      `protobuf:"bytes,30,opt,name=epAbort,proto3" json:"epAbort,omitempty"`
	EpAborted                    *EpAborted                    `protobuf:"bytes,31,opt,name=epAborted,proto3" json:"epAborted,omitempty"`
	EpInternalAccept             *EpInternalAccept             `protobuf:"bytes,32,opt,name=epInternalAccept,proto3" json:"epInternalAccept,omitempty"`
	EpDecide                     *EpDecide                     `protobuf:"bytes,33,opt,name=epDecide,proto3" json:"epDecide,omitempty"`
	EpInternalDecided            *EpInternalDecided            `protobuf:"bytes,34,opt,name=epInternalDecided,proto3" json:"epInternalDecided,omitempty"`
	EpPropose                    *EpPropose                    `protobuf:"bytes,35,opt,name=epPropose,proto3" json:"epPropose,omitempty"`
	EpInternalRead               *EpInternalRead               `protobuf:"bytes,36,opt,name=epInternalRead,proto3" json:"epInternalRead,omitempty"`
	EpInternalState              *EpInternalState              `protobuf:"bytes,37,opt,name=epInternalState,proto3" json:"epInternalState,omitempty"`
	EpInternalWrite              *EpInternalWrite              `protobuf:"bytes,38,opt,name=epInternalWrite,proto3" json:"epInternalWrite,omitempty"`
	EcInternalNack               *EcInternalNack               `protobuf:"bytes,41,opt,name=ecInternalNack,proto3" json:"ecInternalNack,omitempty"`
	EcInternalNewEpoch           *EcInternalNewEpoch           `protobuf:"bytes,42,opt,name=ecInternalNewEpoch,proto3" json:"ecInternalNewEpoch,omitempty"`
	EcStartEpoch                 *EcStartEpoch                 `protobuf:"bytes,43,opt,name=ecStartEpoch,proto3" json:"ecStartEpoch,omitempty"`
	BebBroadcast                 *BebBroadcast                 `protobuf:"bytes,50,opt,name=bebBroadcast,proto3" json:"bebBroadcast,omitempty"`
	BebDeliver                   *BebDeliver                   `protobuf:"bytes,51,opt,name=bebDeliver,proto3" json:"bebDeliver,omitempty"`
	EldTimeout                   *EldTimeout                   `protobuf:"bytes,60,opt,name=eldTimeout,proto3" json:"eldTimeout,omitempty"`
	EldTrust                     *EldTrust                     `protobuf:"bytes,61,opt,name=eldTrust,proto3" json:"eldTrust,omitempty"`
	NnarInternalAck              *NnarInternalAck              `protobuf:"bytes,70,opt,name=nnarInternalAck,proto3" json:"nnarInternalAck,omitempty"`
	NnarInternalRead             *NnarInternalRead             `protobuf:"bytes,71,opt,name=nnarInternalRead,proto3" json:"nnarInternalRead,omitempty"`
	NnarInternalValue            *NnarInternalValue            `protobuf:"bytes,72,opt,name=nnarInternalValue,proto3" json:"nnarInternalValue,omitempty"`
	NnarInternalWrite            *NnarInternalWrite            `protobuf:"bytes,73,opt,name=nnarInternalWrite,proto3" json:"nnarInternalWrite,omitempty"`
	NnarRead                     *NnarRead                     `protobuf:"bytes,74,opt,name=nnarRead,proto3" json:"nnarRead,omitempty"`
	NnarReadReturn               *NnarReadReturn               `protobuf:"bytes,75,opt,name=nnarReadReturn,proto3" json:"nnarReadReturn,omitempty"`
	NnarWrite                    *NnarWrite                    `protobuf:"bytes,76,opt,name=nnarWrite,proto3" json:"nnarWrite,omitempty"`
	NnarWriteReturn              *NnarWriteReturn              `protobuf:"bytes,77,opt,name=nnarWriteReturn,proto3" json:"nnarWriteReturn,omitempty"`
	EpfdTimeout                  *EpfdTimeout                  `protobuf:"bytes,80,opt,name=epfdTimeout,proto3" json:"epfdTimeout,omitempty"`
	EpfdInternalHeartbeatRequest *EpfdInternalHeartbeatRequest `protobuf:"bytes,81,opt,name=epfdInternalHeartbeatRequest,proto3" json:"epfdInternalHeartbeatRequest,omitempty"`
	EpfdInternalHeartbeatReply   *EpfdInternalHeartbeatReply   `protobuf:"bytes,82,opt,name=epfdInternalHeartbeatReply,proto3" json:"epfdInternalHeartbeatReply,omitempty"`
	EpfdSuspect                  *EpfdSuspect                  `protobuf:"bytes,83,opt,name=epfdSuspect,proto3" json:"epfdSuspect,omitempty"`
	EpfdRestore                  *EpfdRestore                  `protobuf:"bytes,84,opt,name=epfdRestore,proto3" json:"epfdRestore,omitempty"`
	PlDeliver                    *PlDeliver                    `protobuf:"bytes,90,opt,name=plDeliver,proto3" json:"plDeliver,omitempty"`
	PlSend                       *PlSend                       `protobuf:"bytes,91,opt,name=plSend,proto3" json:"plSend,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_communication_protocol_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_communication_protocol_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_communication_protocol_proto_rawDescGZIP(), []int{47}
}

func (x *Message) GetType() Message_Type {
	if x != nil {
		return x.Type
	}
	return Message_NETWORK_MESSAGE
}

func (x *Message) GetMessageUuid() string {
	if x != nil {
		return x.MessageUuid
	}
	return ""
}

func (x *Message) GetFromAbstractionId() string {
	if x != nil {
		return x.FromAbstractionId
	}
	return ""
}

func (x *Message) GetToAbstractionId() string {
	if x != nil {
		return x.ToAbstractionId
	}
	return ""
}

func (x *Message) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *Message) GetNetworkMessage() *NetworkMessage {
	if x != nil {
		return x.NetworkMessage
	}
	return nil
}

func (x *Message) GetProcRegistration() *ProcRegistration {
	if x != nil {
		return x.ProcRegistration
	}
	return nil
}

func (x *Message) GetProcInitializeSystem() *ProcInitializeSystem {
	if x != nil {
		return x.ProcInitializeSystem
	}
	return nil
}

func (x *Message) GetProcDestroySystem() *ProcDestroySystem {
	if x != nil {
		return x.ProcDestroySystem
	}
	return nil
}

func (x *Message) GetAppBroadcast() *AppBroadcast {
	if x != nil {
		return x.AppBroadcast
	}
	return nil
}

func (x *Message) GetAppValue() *AppValue {
	if x != nil {
		return x.AppValue
	}
	return nil
}

func (x *Message) GetAppPropose() *AppPropose {
	if x != nil {
		return x.AppPropose
	}
	return nil
}

func (x *Message) GetAppDecide() *AppDecide {
	if x != nil {
		return x.AppDecide
	}
	return nil
}

func (x *Message) GetAppRead() *AppRead {
	if x != nil {
		return x.AppRead
	}
	return nil
}

func (x *Message) GetAppWrite() *AppWrite {
	if x != nil {
		return x.AppWrite
	}
	return nil
}

func (x *Message) GetAppReadReturn() *AppReadReturn {
	if x != nil {
		return x.AppReadReturn
	}
	return nil
}

func (x *Message) GetAppWriteReturn() *AppWriteReturn {
	if x != nil {
		return x.AppWriteReturn
	}
	return nil
}

func (x *Message) GetUcDecide() *UcDecide {
	if x != nil {
		return x.UcDecide
	}
	return nil
}

func (x *Message) GetUcPropose() *UcPropose {
	if x != nil {
		return x.UcPropose
	}
	return nil
}

func (x *Message) GetEpAbort() *EpAbort {
	if x != nil {
		return x.EpAbort
	}
	return nil
}

func (x *Message) GetEpAborted() *EpAborted {
	if x != nil {
		return x.EpAborted
	}
	return nil
}

func (x *Message) GetEpInternalAccept() *EpInternalAccept {
	if x != nil {
		return x.EpInternalAccept
	}
	return nil
}

func (x *Message) GetEpDecide() *EpDecide {
	if x != nil {
		return x.EpDecide
	}
	return nil
}

func (x *Message) GetEpInternalDecided() *EpInternalDecided {
	if x != nil {
		return x.EpInternalDecided
	}
	return nil
}

func (x *Message) GetEpPropose() *EpPropose {
	if x != nil {
		return x.EpPropose
	}
	return nil
}

func (x *Message) GetEpInternalRead() *EpInternalRead {
	if x != nil {
		return x.EpInternalRead
	}
	return nil
}

func (x *Message) GetEpInternalState() *EpInternalState {
	if x != nil {
		return x.EpInternalState
	}
	return nil
}

func (x *Message) GetEpInternalWrite() *EpInternalWrite {
	if x != nil {
		return x.EpInternalWrite
	}
	return nil
}

func (x *Message) GetEcInternalNack() *EcInternalNack {
	if x != nil {
		return x.EcInternalNack
	}
	return nil
}

func (x *Message) GetEcInternalNewEpoch() *EcInternalNewEpoch {
	if x != nil {
		return x.EcInternalNewEpoch
	}
	return nil
}

func (x *Message) GetEcStartEpoch() *EcStartEpoch {
	if x != nil {
		return x.EcStartEpoch
	}
	return nil
}

func (x *Message) GetBebBroadcast() *BebBroadcast {
	if x != nil {
		return x.BebBroadcast
	}
	return nil
}

func (x *Message) GetBebDeliver() *BebDeliver {
	if x != nil {
		return x.BebDeliver
	}
	return nil
}

func (x *Message) GetEldTimeout() *EldTimeout {
	if x != nil {
		return x.EldTimeout
	}
	return nil
}

func (x *Message) GetEldTrust() *EldTrust {
	if x != nil {
		return x.EldTrust
	}
	return nil
}

func (x *Message) GetNnarInternalAck() *NnarInternalAck {
	if x != nil {
		return x.NnarInternalAck
	}
	return nil
}

func (x *Message) GetNnarInternalRead() *NnarInternalRead {
	if x != nil {
		return x.NnarInternalRead
	}
	return nil
}

func (x *Message) GetNnarInternalValue() *NnarInternalValue {
	if x != nil {
		return x.NnarInternalValue
	}
	return nil
}

func (x *Message) GetNnarInternalWrite() *NnarInternalWrite {
	if x != nil {
		return x.NnarInternalWrite
	}
	return nil
}

func (x *Message) GetNnarRead() *NnarRead {
	if x != nil {
		return x.NnarRead
	}
	return nil
}

func (x *Message) GetNnarReadReturn() *NnarReadReturn {
	if x != nil {
		return x.NnarReadReturn
	}
	return nil
}

func (x *Message) GetNnarWrite() *NnarWrite {
	if x != nil {
		return x.NnarWrite
	}
	return nil
}

func (x *Message) GetNnarWriteReturn() *NnarWriteReturn {
	if x != nil {
		return x.NnarWriteReturn
	}
	return nil
}

func (x *Message) GetEpfdTimeout() *EpfdTimeout {
	if x != nil {
		return x.EpfdTimeout
	}
	return nil
}

func (x *Message) GetEpfdInternalHeartbeatRequest() *EpfdInternalHeartbeatRequest {
	if x != nil {
		return x.EpfdInternalHeartbeatRequest
	}
	return nil
}

func (x *Message) GetEpfdInternalHeartbeatReply() *EpfdInternalHeartbeatReply {
	if x != nil {
		return x.EpfdInternalHeartbeatReply
	}
	return nil
}

func (x *Message) GetEpfdSuspect() *EpfdSuspect {
	if x != nil {
		return x.EpfdSuspect
	}
	return nil
}

func (x *Message) GetEpfdRestore() *EpfdRestore {
	if x != nil {
		return x.EpfdRestore
	}
	return nil
}

func (x *Message) GetPlDeliver() *PlDeliver {
	if x != nil {
		return x.PlDeliver
	}
	return nil
}

func (x *Message) GetPlSend() *PlSend {
	if x != nil {
		return x.PlSend
	}
	return nil
}

var File_communication_protocol_proto protoreflect.FileDescriptor

var file_communication_protocol_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x73, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0x2f, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x12,
	0x0c, 0x0a, 0x01, 0x76, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x76, 0x22, 0x3e, 0x0a,
	0x10, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x48, 0x0a,
	0x14, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x30, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x63, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x34, 0x0a, 0x0c,
	0x41, 0x70, 0x70, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x30, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x24,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x48, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31,
	0x0a, 0x09, 0x41, 0x70, 0x70, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x25, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x52, 0x65, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x22, 0x4c, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x51, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x52, 0x65, 0x61,
	0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x0e, 0x41, 0x70, 0x70,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x22, 0x31, 0x0a, 0x09, 0x55, 0x63, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x30, 0x0a, 0x08, 0x55, 0x63,
	0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x09, 0x0a, 0x07,
	0x45, 0x70, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x22, 0x6b, 0x0a, 0x09, 0x45, 0x70, 0x41, 0x62, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x65, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x24,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x09, 0x45, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x65, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x08, 0x45, 0x70, 0x44, 0x65, 0x63,
	0x69, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x65, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x45,
	0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x22, 0x5f, 0x0a,
	0x0f, 0x45, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x37,
	0x0a, 0x0f, 0x45, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x45, 0x70, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x22, 0x39, 0x0a, 0x11, 0x45,
	0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x64,
	0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x45, 0x63, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x63, 0x6b, 0x22, 0x64, 0x0a, 0x0c, 0x45, 0x63, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x6e, 0x65, 0x77, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x30, 0x0a, 0x09,
	0x6e, 0x65, 0x77, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x32,
	0x0a, 0x12, 0x45, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x65, 0x77, 0x45,
	0x70, 0x6f, 0x63, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x22, 0x3a, 0x0a, 0x0c, 0x42, 0x65, 0x62, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x64,
	0x0a, 0x0a, 0x42, 0x65, 0x62, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x52, 0x06, 0x73, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x22, 0x0c, 0x0a, 0x0a, 0x45, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x22, 0x38, 0x0a, 0x08, 0x45, 0x6c, 0x64, 0x54, 0x72, 0x75, 0x73, 0x74, 0x12, 0x2c,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x49, 0x64, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x22, 0x0a, 0x0a, 0x08,
	0x4e, 0x6e, 0x61, 0x72, 0x52, 0x65, 0x61, 0x64, 0x22, 0x2a, 0x0a, 0x10, 0x4e, 0x6e, 0x61, 0x72,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x64, 0x49, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x11, 0x4e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x61, 0x64,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b,
	0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x11, 0x4e, 0x6e, 0x61, 0x72, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x64, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x52, 0x61,
	0x6e, 0x6b, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a, 0x09, 0x4e, 0x6e, 0x61, 0x72,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x29, 0x0a, 0x0f, 0x4e,
	0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x6b, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x64, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x0e, 0x4e, 0x6e, 0x61, 0x72, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x11,
	0x0a, 0x0f, 0x4e, 0x6e, 0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x22, 0x0d, 0x0a, 0x0b, 0x45, 0x70, 0x66, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x22, 0x1e, 0x0a, 0x1c, 0x45, 0x70, 0x66, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x1c, 0x0a, 0x1a, 0x45, 0x70, 0x66, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x3b,
	0x0a, 0x0b, 0x45, 0x70, 0x66, 0x64, 0x53, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x12, 0x2c, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x49, 0x64, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x22, 0x3b, 0x0a, 0x0b, 0x45,
	0x70, 0x66, 0x64, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x22, 0x6a, 0x0a, 0x06, 0x50, 0x6c, 0x53, 0x65,
	0x6e, 0x64, 0x12, 0x34, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x49, 0x64, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x63, 0x0a, 0x09, 0x50, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x2a, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8e, 0x01, 0x0a, 0x0e, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x13,
	0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x50,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x2a,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa0, 0x1e, 0x0a, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x62, 0x73, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x46, 0x72, 0x6f, 0x6d, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x0f, 0x54, 0x6f, 0x41, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x54, 0x6f, 0x41, 0x62,
	0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x63,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f,
	0x63, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x70,
	0x72, 0x6f, 0x63, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x51, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x14, 0x70, 0x72,
	0x6f, 0x63, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x53, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x12, 0x48, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x63, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x39, 0x0a, 0x0c,
	0x61, 0x70, 0x70, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x70, 0x70,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x61, 0x70,
	0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x52,
	0x0a, 0x61, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x61,
	0x70, 0x70, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x63, 0x69,
	0x64, 0x65, 0x52, 0x09, 0x61, 0x70, 0x70, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x12, 0x2a, 0x0a,
	0x07, 0x61, 0x70, 0x70, 0x52, 0x65, 0x61, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x07, 0x61, 0x70, 0x70, 0x52, 0x65, 0x61, 0x64, 0x12, 0x2d, 0x0a, 0x08, 0x61, 0x70, 0x70,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x08,
	0x61, 0x70, 0x70, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x65, 0x61,
	0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x52, 0x65, 0x61, 0x64,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x3f, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x57, 0x72, 0x69,
	0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x70, 0x70, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x2d, 0x0a, 0x08, 0x75, 0x63, 0x44, 0x65, 0x63,
	0x69, 0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x55, 0x63, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x52, 0x08, 0x75, 0x63,
	0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x75, 0x63, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x55, 0x63, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x09, 0x75,
	0x63, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x07, 0x65, 0x70, 0x41, 0x62,
	0x6f, 0x72, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x45, 0x70, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x52, 0x07, 0x65, 0x70, 0x41,
	0x62, 0x6f, 0x72, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x65, 0x70, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x45, 0x70, 0x41, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x52, 0x09, 0x65, 0x70, 0x41,
	0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x45, 0x0a, 0x10, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x70, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x52, 0x10, 0x65, 0x70, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x2d, 0x0a,
	0x08, 0x65, 0x70, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x70, 0x44, 0x65, 0x63, 0x69,
	0x64, 0x65, 0x52, 0x08, 0x65, 0x70, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65, 0x12, 0x48, 0x0a, 0x11,
	0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x63, 0x69, 0x64, 0x65,
	0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x45, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x63, 0x69,
	0x64, 0x65, 0x64, 0x52, 0x11, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x44,
	0x65, 0x63, 0x69, 0x64, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x09, 0x65, 0x70, 0x50, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x45, 0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x52, 0x09, 0x65,
	0x70, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x65, 0x70, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x18, 0x24, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x70, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x0e, 0x65, 0x70, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x12, 0x42, 0x0a, 0x0f, 0x65, 0x70, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x25, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x70, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x65, 0x70,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a,
	0x0f, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x45, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x52, 0x0f, 0x65, 0x70, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e,
	0x61, 0x63, 0x6b, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x45, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x61,
	0x63, 0x6b, 0x52, 0x0e, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x61,
	0x63, 0x6b, 0x12, 0x4b, 0x0a, 0x12, 0x65, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x4e, 0x65, 0x77, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x63, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x4e, 0x65, 0x77, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x12, 0x65, 0x63, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x4e, 0x65, 0x77, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12,
	0x39, 0x0a, 0x0c, 0x65, 0x63, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x18,
	0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x45, 0x63, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x52, 0x0c, 0x65, 0x63,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x39, 0x0a, 0x0c, 0x62, 0x65,
	0x62, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x65, 0x62, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x52, 0x0c, 0x62, 0x65, 0x62, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x62, 0x65, 0x62, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x42, 0x65, 0x62, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x52, 0x0a,
	0x62, 0x65, 0x62, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x0a, 0x65, 0x6c,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x52, 0x0a, 0x65, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12,
	0x2d, 0x0a, 0x08, 0x65, 0x6c, 0x64, 0x54, 0x72, 0x75, 0x73, 0x74, 0x18, 0x3d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6c, 0x64, 0x54,
	0x72, 0x75, 0x73, 0x74, 0x52, 0x08, 0x65, 0x6c, 0x64, 0x54, 0x72, 0x75, 0x73, 0x74, 0x12, 0x42,
	0x0a, 0x0f, 0x6e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63,
	0x6b, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x63,
	0x6b, 0x52, 0x0f, 0x6e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41,
	0x63, 0x6b, 0x12, 0x45, 0x0a, 0x10, 0x6e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x18, 0x47, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x52, 0x10, 0x6e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x64, 0x12, 0x48, 0x0a, 0x11, 0x6e, 0x6e, 0x61,
	0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x48,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e,
	0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x11, 0x6e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x48, 0x0a, 0x11, 0x6e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x18, 0x49, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x11, 0x6e, 0x6e, 0x61, 0x72,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12, 0x2d, 0x0a,
	0x08, 0x6e, 0x6e, 0x61, 0x72, 0x52, 0x65, 0x61, 0x64, 0x18, 0x4a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x08, 0x6e, 0x6e, 0x61, 0x72, 0x52, 0x65, 0x61, 0x64, 0x12, 0x3f, 0x0a, 0x0e,
	0x6e, 0x6e, 0x61, 0x72, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x4b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e,
	0x6e, 0x61, 0x72, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x0e, 0x6e,
	0x6e, 0x61, 0x72, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x30, 0x0a,
	0x09, 0x6e, 0x6e, 0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x09, 0x6e, 0x6e, 0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x12,
	0x42, 0x0a, 0x0f, 0x6e, 0x6e, 0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x4e, 0x6e, 0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x52, 0x0f, 0x6e, 0x6e, 0x61, 0x72, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x12, 0x36, 0x0a, 0x0b, 0x65, 0x70, 0x66, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x45, 0x70, 0x66, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x52, 0x0b,
	0x65, 0x70, 0x66, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x69, 0x0a, 0x1c, 0x65,
	0x70, 0x66, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74,
	0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x51, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x70, 0x66, 0x64,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x1c, 0x65, 0x70, 0x66, 0x64, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x63, 0x0a, 0x1a, 0x65, 0x70, 0x66, 0x64, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x18, 0x52, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x70, 0x66, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x48, 0x65, 0x61, 0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x1a, 0x65, 0x70, 0x66, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x62, 0x65, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x36, 0x0a, 0x0b, 0x65,
	0x70, 0x66, 0x64, 0x53, 0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x18, 0x53, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x70, 0x66, 0x64, 0x53,
	0x75, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x0b, 0x65, 0x70, 0x66, 0x64, 0x53, 0x75, 0x73, 0x70,
	0x65, 0x63, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x65, 0x70, 0x66, 0x64, 0x52, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x65, 0x18, 0x54, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x45, 0x70, 0x66, 0x64, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x0b,
	0x65, 0x70, 0x66, 0x64, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x70,
	0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x52, 0x09, 0x70, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x12, 0x27, 0x0a,
	0x06, 0x70, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x18, 0x5b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x06,
	0x70, 0x6c, 0x53, 0x65, 0x6e, 0x64, 0x22, 0x94, 0x07, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x13, 0x0a, 0x0f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41,
	0x47, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x52, 0x4f, 0x43, 0x5f, 0x52, 0x45, 0x47,
	0x49, 0x53, 0x54, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x50,
	0x52, 0x4f, 0x43, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x5a, 0x45, 0x5f, 0x53,
	0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x52, 0x4f, 0x43, 0x5f,
	0x44, 0x45, 0x53, 0x54, 0x52, 0x4f, 0x59, 0x5f, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x03,
	0x12, 0x11, 0x0a, 0x0d, 0x41, 0x50, 0x50, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41, 0x53,
	0x54, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x50, 0x50, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45,
	0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x50, 0x50, 0x5f, 0x44, 0x45, 0x43, 0x49, 0x44, 0x45,
	0x10, 0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x50, 0x50, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53,
	0x45, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x50, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10,
	0x08, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x50, 0x50, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x09,
	0x12, 0x13, 0x0a, 0x0f, 0x41, 0x50, 0x50, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x52, 0x45, 0x54,
	0x55, 0x52, 0x4e, 0x10, 0x0a, 0x12, 0x14, 0x0a, 0x10, 0x41, 0x50, 0x50, 0x5f, 0x57, 0x52, 0x49,
	0x54, 0x45, 0x5f, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x10, 0x0b, 0x12, 0x0d, 0x0a, 0x09, 0x55,
	0x43, 0x5f, 0x44, 0x45, 0x43, 0x49, 0x44, 0x45, 0x10, 0x14, 0x12, 0x0e, 0x0a, 0x0a, 0x55, 0x43,
	0x5f, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x45, 0x10, 0x15, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x50,
	0x5f, 0x41, 0x42, 0x4f, 0x52, 0x54, 0x10, 0x1e, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x50, 0x5f, 0x41,
	0x42, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x1f, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x50, 0x5f, 0x44,
	0x45, 0x43, 0x49, 0x44, 0x45, 0x10, 0x20, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x50, 0x5f, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x10, 0x21, 0x12,
	0x17, 0x0a, 0x13, 0x45, 0x50, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x44,
	0x45, 0x43, 0x49, 0x44, 0x45, 0x44, 0x10, 0x22, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x50, 0x5f, 0x49,
	0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x23, 0x12, 0x15,
	0x0a, 0x11, 0x45, 0x50, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x10, 0x24, 0x12, 0x15, 0x0a, 0x11, 0x45, 0x50, 0x5f, 0x49, 0x4e, 0x54, 0x45,
	0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x25, 0x12, 0x0e, 0x0a, 0x0a,
	0x45, 0x50, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x4f, 0x53, 0x45, 0x10, 0x26, 0x12, 0x14, 0x0a, 0x10,
	0x45, 0x43, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x4e, 0x41, 0x43, 0x4b,
	0x10, 0x28, 0x12, 0x19, 0x0a, 0x15, 0x45, 0x43, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41,
	0x4c, 0x5f, 0x4e, 0x45, 0x57, 0x5f, 0x45, 0x50, 0x4f, 0x43, 0x48, 0x10, 0x29, 0x12, 0x12, 0x0a,
	0x0e, 0x45, 0x43, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x45, 0x50, 0x4f, 0x43, 0x48, 0x10,
	0x2a, 0x12, 0x11, 0x0a, 0x0d, 0x42, 0x45, 0x42, 0x5f, 0x42, 0x52, 0x4f, 0x41, 0x44, 0x43, 0x41,
	0x53, 0x54, 0x10, 0x32, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x45, 0x42, 0x5f, 0x44, 0x45, 0x4c, 0x49,
	0x56, 0x45, 0x52, 0x10, 0x33, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x4f, 0x55, 0x54, 0x10, 0x3c, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x4c, 0x44, 0x5f, 0x54, 0x52,
	0x55, 0x53, 0x54, 0x10, 0x3d, 0x12, 0x15, 0x0a, 0x11, 0x4e, 0x4e, 0x41, 0x52, 0x5f, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0x46, 0x12, 0x16, 0x0a, 0x12,
	0x4e, 0x4e, 0x41, 0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x52, 0x45,
	0x41, 0x44, 0x10, 0x47, 0x12, 0x17, 0x0a, 0x13, 0x4e, 0x4e, 0x41, 0x52, 0x5f, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x10, 0x48, 0x12, 0x17, 0x0a,
	0x13, 0x4e, 0x4e, 0x41, 0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x57,
	0x52, 0x49, 0x54, 0x45, 0x10, 0x49, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4e, 0x41, 0x52, 0x5f, 0x52,
	0x45, 0x41, 0x44, 0x10, 0x4a, 0x12, 0x14, 0x0a, 0x10, 0x4e, 0x4e, 0x41, 0x52, 0x5f, 0x52, 0x45,
	0x41, 0x44, 0x5f, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e, 0x10, 0x4b, 0x12, 0x0e, 0x0a, 0x0a, 0x4e,
	0x4e, 0x41, 0x52, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x10, 0x4c, 0x12, 0x15, 0x0a, 0x11, 0x4e,
	0x4e, 0x41, 0x52, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x54, 0x55, 0x52, 0x4e,
	0x10, 0x4d, 0x12, 0x21, 0x0a, 0x1d, 0x45, 0x50, 0x46, 0x44, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52,
	0x4e, 0x41, 0x4c, 0x5f, 0x48, 0x45, 0x41, 0x52, 0x54, 0x42, 0x45, 0x41, 0x54, 0x5f, 0x52, 0x45,
	0x50, 0x4c, 0x59, 0x10, 0x50, 0x12, 0x23, 0x0a, 0x1f, 0x45, 0x50, 0x46, 0x44, 0x5f, 0x49, 0x4e,
	0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x48, 0x45, 0x41, 0x52, 0x54, 0x42, 0x45, 0x41, 0x54,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x51, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x50,
	0x46, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x54, 0x4f, 0x52, 0x45, 0x10, 0x52, 0x12, 0x10, 0x0a, 0x0c,
	0x45, 0x50, 0x46, 0x44, 0x5f, 0x53, 0x55, 0x53, 0x50, 0x45, 0x43, 0x54, 0x10, 0x53, 0x12, 0x10,
	0x0a, 0x0c, 0x45, 0x50, 0x46, 0x44, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x54,
	0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x4c, 0x5f, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x10, 0x5a,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x4c, 0x5f, 0x53, 0x45, 0x4e, 0x44, 0x10, 0x5b, 0x42, 0x0b, 0x5a,
	0x09, 0x2e, 0x3b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_communication_protocol_proto_rawDescOnce sync.Once
	file_communication_protocol_proto_rawDescData = file_communication_protocol_proto_rawDesc
)

func file_communication_protocol_proto_rawDescGZIP() []byte {
	file_communication_protocol_proto_rawDescOnce.Do(func() {
		file_communication_protocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_communication_protocol_proto_rawDescData)
	})
	return file_communication_protocol_proto_rawDescData
}

var file_communication_protocol_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_communication_protocol_proto_msgTypes = make([]protoimpl.MessageInfo, 48)
var file_communication_protocol_proto_goTypes = []interface{}{
	(Message_Type)(0),                    // 0: message.Message.Type
	(*ProcessId)(nil),                    // 1: message.ProcessId
	(*Value)(nil),                        // 2: message.Value
	(*ProcRegistration)(nil),             // 3: message.ProcRegistration
	(*ProcInitializeSystem)(nil),         // 4: message.ProcInitializeSystem
	(*ProcDestroySystem)(nil),            // 5: message.ProcDestroySystem
	(*AppBroadcast)(nil),                 // 6: message.AppBroadcast
	(*AppValue)(nil),                     // 7: message.AppValue
	(*AppPropose)(nil),                   // 8: message.AppPropose
	(*AppDecide)(nil),                    // 9: message.AppDecide
	(*AppRead)(nil),                      // 10: message.AppRead
	(*AppWrite)(nil),                     // 11: message.AppWrite
	(*AppReadReturn)(nil),                // 12: message.AppReadReturn
	(*AppWriteReturn)(nil),               // 13: message.AppWriteReturn
	(*UcPropose)(nil),                    // 14: message.UcPropose
	(*UcDecide)(nil),                     // 15: message.UcDecide
	(*EpAbort)(nil),                      // 16: message.EpAbort
	(*EpAborted)(nil),                    // 17: message.EpAborted
	(*EpPropose)(nil),                    // 18: message.EpPropose
	(*EpDecide)(nil),                     // 19: message.EpDecide
	(*EpInternalRead)(nil),               // 20: message.EpInternalRead
	(*EpInternalState)(nil),              // 21: message.EpInternalState
	(*EpInternalWrite)(nil),              // 22: message.EpInternalWrite
	(*EpInternalAccept)(nil),             // 23: message.EpInternalAccept
	(*EpInternalDecided)(nil),            // 24: message.EpInternalDecided
	(*EcInternalNack)(nil),               // 25: message.EcInternalNack
	(*EcStartEpoch)(nil),                 // 26: message.EcStartEpoch
	(*EcInternalNewEpoch)(nil),           // 27: message.EcInternalNewEpoch
	(*BebBroadcast)(nil),                 // 28: message.BebBroadcast
	(*BebDeliver)(nil),                   // 29: message.BebDeliver
	(*EldTimeout)(nil),                   // 30: message.EldTimeout
	(*EldTrust)(nil),                     // 31: message.EldTrust
	(*NnarRead)(nil),                     // 32: message.NnarRead
	(*NnarInternalRead)(nil),             // 33: message.NnarInternalRead
	(*NnarInternalValue)(nil),            // 34: message.NnarInternalValue
	(*NnarInternalWrite)(nil),            // 35: message.NnarInternalWrite
	(*NnarWrite)(nil),                    // 36: message.NnarWrite
	(*NnarInternalAck)(nil),              // 37: message.NnarInternalAck
	(*NnarReadReturn)(nil),               // 38: message.NnarReadReturn
	(*NnarWriteReturn)(nil),              // 39: message.NnarWriteReturn
	(*EpfdTimeout)(nil),                  // 40: message.EpfdTimeout
	(*EpfdInternalHeartbeatRequest)(nil), // 41: message.EpfdInternalHeartbeatRequest
	(*EpfdInternalHeartbeatReply)(nil),   // 42: message.EpfdInternalHeartbeatReply
	(*EpfdSuspect)(nil),                  // 43: message.EpfdSuspect
	(*EpfdRestore)(nil),                  // 44: message.EpfdRestore
	(*PlSend)(nil),                       // 45: message.PlSend
	(*PlDeliver)(nil),                    // 46: message.PlDeliver
	(*NetworkMessage)(nil),               // 47: message.NetworkMessage
	(*Message)(nil),                      // 48: message.Message
}
var file_communication_protocol_proto_depIdxs = []int32{
	1,  // 0: message.ProcInitializeSystem.processes:type_name -> message.ProcessId
	2,  // 1: message.AppBroadcast.value:type_name -> message.Value
	2,  // 2: message.AppValue.value:type_name -> message.Value
	2,  // 3: message.AppPropose.value:type_name -> message.Value
	2,  // 4: message.AppDecide.value:type_name -> message.Value
	2,  // 5: message.AppWrite.value:type_name -> message.Value
	2,  // 6: message.AppReadReturn.value:type_name -> message.Value
	2,  // 7: message.UcPropose.value:type_name -> message.Value
	2,  // 8: message.UcDecide.value:type_name -> message.Value
	2,  // 9: message.EpAborted.value:type_name -> message.Value
	2,  // 10: message.EpPropose.value:type_name -> message.Value
	2,  // 11: message.EpDecide.value:type_name -> message.Value
	2,  // 12: message.EpInternalState.value:type_name -> message.Value
	2,  // 13: message.EpInternalWrite.value:type_name -> message.Value
	2,  // 14: message.EpInternalDecided.value:type_name -> message.Value
	1,  // 15: message.EcStartEpoch.newLeader:type_name -> message.ProcessId
	48, // 16: message.BebBroadcast.message:type_name -> message.Message
	48, // 17: message.BebDeliver.message:type_name -> message.Message
	1,  // 18: message.BebDeliver.sender:type_name -> message.ProcessId
	1,  // 19: message.EldTrust.process:type_name -> message.ProcessId
	2,  // 20: message.NnarInternalValue.value:type_name -> message.Value
	2,  // 21: message.NnarInternalWrite.value:type_name -> message.Value
	2,  // 22: message.NnarWrite.value:type_name -> message.Value
	2,  // 23: message.NnarReadReturn.value:type_name -> message.Value
	1,  // 24: message.EpfdSuspect.process:type_name -> message.ProcessId
	1,  // 25: message.EpfdRestore.process:type_name -> message.ProcessId
	1,  // 26: message.PlSend.destination:type_name -> message.ProcessId
	48, // 27: message.PlSend.message:type_name -> message.Message
	1,  // 28: message.PlDeliver.sender:type_name -> message.ProcessId
	48, // 29: message.PlDeliver.message:type_name -> message.Message
	48, // 30: message.NetworkMessage.message:type_name -> message.Message
	0,  // 31: message.Message.type:type_name -> message.Message.Type
	47, // 32: message.Message.networkMessage:type_name -> message.NetworkMessage
	3,  // 33: message.Message.procRegistration:type_name -> message.ProcRegistration
	4,  // 34: message.Message.procInitializeSystem:type_name -> message.ProcInitializeSystem
	5,  // 35: message.Message.procDestroySystem:type_name -> message.ProcDestroySystem
	6,  // 36: message.Message.appBroadcast:type_name -> message.AppBroadcast
	7,  // 37: message.Message.appValue:type_name -> message.AppValue
	8,  // 38: message.Message.appPropose:type_name -> message.AppPropose
	9,  // 39: message.Message.appDecide:type_name -> message.AppDecide
	10, // 40: message.Message.appRead:type_name -> message.AppRead
	11, // 41: message.Message.appWrite:type_name -> message.AppWrite
	12, // 42: message.Message.appReadReturn:type_name -> message.AppReadReturn
	13, // 43: message.Message.appWriteReturn:type_name -> message.AppWriteReturn
	15, // 44: message.Message.ucDecide:type_name -> message.UcDecide
	14, // 45: message.Message.ucPropose:type_name -> message.UcPropose
	16, // 46: message.Message.epAbort:type_name -> message.EpAbort
	17, // 47: message.Message.epAborted:type_name -> message.EpAborted
	23, // 48: message.Message.epInternalAccept:type_name -> message.EpInternalAccept
	19, // 49: message.Message.epDecide:type_name -> message.EpDecide
	24, // 50: message.Message.epInternalDecided:type_name -> message.EpInternalDecided
	18, // 51: message.Message.epPropose:type_name -> message.EpPropose
	20, // 52: message.Message.epInternalRead:type_name -> message.EpInternalRead
	21, // 53: message.Message.epInternalState:type_name -> message.EpInternalState
	22, // 54: message.Message.epInternalWrite:type_name -> message.EpInternalWrite
	25, // 55: message.Message.ecInternalNack:type_name -> message.EcInternalNack
	27, // 56: message.Message.ecInternalNewEpoch:type_name -> message.EcInternalNewEpoch
	26, // 57: message.Message.ecStartEpoch:type_name -> message.EcStartEpoch
	28, // 58: message.Message.bebBroadcast:type_name -> message.BebBroadcast
	29, // 59: message.Message.bebDeliver:type_name -> message.BebDeliver
	30, // 60: message.Message.eldTimeout:type_name -> message.EldTimeout
	31, // 61: message.Message.eldTrust:type_name -> message.EldTrust
	37, // 62: message.Message.nnarInternalAck:type_name -> message.NnarInternalAck
	33, // 63: message.Message.nnarInternalRead:type_name -> message.NnarInternalRead
	34, // 64: message.Message.nnarInternalValue:type_name -> message.NnarInternalValue
	35, // 65: message.Message.nnarInternalWrite:type_name -> message.NnarInternalWrite
	32, // 66: message.Message.nnarRead:type_name -> message.NnarRead
	38, // 67: message.Message.nnarReadReturn:type_name -> message.NnarReadReturn
	36, // 68: message.Message.nnarWrite:type_name -> message.NnarWrite
	39, // 69: message.Message.nnarWriteReturn:type_name -> message.NnarWriteReturn
	40, // 70: message.Message.epfdTimeout:type_name -> message.EpfdTimeout
	41, // 71: message.Message.epfdInternalHeartbeatRequest:type_name -> message.EpfdInternalHeartbeatRequest
	42, // 72: message.Message.epfdInternalHeartbeatReply:type_name -> message.EpfdInternalHeartbeatReply
	43, // 73: message.Message.epfdSuspect:type_name -> message.EpfdSuspect
	44, // 74: message.Message.epfdRestore:type_name -> message.EpfdRestore
	46, // 75: message.Message.plDeliver:type_name -> message.PlDeliver
	45, // 76: message.Message.plSend:type_name -> message.PlSend
	77, // [77:77] is the sub-list for method output_type
	77, // [77:77] is the sub-list for method input_type
	77, // [77:77] is the sub-list for extension type_name
	77, // [77:77] is the sub-list for extension extendee
	0,  // [0:77] is the sub-list for field type_name
}

func init() { file_communication_protocol_proto_init() }
func file_communication_protocol_proto_init() {
	if File_communication_protocol_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_communication_protocol_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcRegistration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcInitializeSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcDestroySystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppPropose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppDecide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppWrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppReadReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppWriteReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcPropose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UcDecide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpAbort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpAborted); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpPropose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpDecide); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpInternalRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpInternalState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpInternalWrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpInternalAccept); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpInternalDecided); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EcInternalNack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EcStartEpoch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EcInternalNewEpoch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BebBroadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BebDeliver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EldTimeout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EldTrust); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NnarRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NnarInternalRead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NnarInternalValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NnarInternalWrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NnarWrite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NnarInternalAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NnarReadReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NnarWriteReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpfdTimeout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpfdInternalHeartbeatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpfdInternalHeartbeatReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpfdSuspect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpfdRestore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlSend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlDeliver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_communication_protocol_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_communication_protocol_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   48,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_communication_protocol_proto_goTypes,
		DependencyIndexes: file_communication_protocol_proto_depIdxs,
		EnumInfos:         file_communication_protocol_proto_enumTypes,
		MessageInfos:      file_communication_protocol_proto_msgTypes,
	}.Build()
	File_communication_protocol_proto = out.File
	file_communication_protocol_proto_rawDesc = nil
	file_communication_protocol_proto_goTypes = nil
	file_communication_protocol_proto_depIdxs = nil
}
